#!/usr/bin/env python

from __future__ import print_function

# from https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Assignments_by_Year

none=None
AREA_CODES = [code for code in 

[201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 319, 401, 402, 403, 404,405, 406, 412, 413, 414, 415, 416, 418, 419, 501, 502, 503, 504, 505, 512, 513, 514, 515, 517, 518, 601, 602, 603, 604, 605, 612, 613, 614, 616, 617, 618, 701, 702,703, 704, 712, 713, 715, 716, 717, 801, 802, 803, 812, 814, 815, 816, 901, 902, 913, 914, 915, 916,
219,
none,
417,
516, 714,
none,
519, 813, 817, 918,
308, 507, 606, 607, 615, 912, 919,
506, 608,
none,
209, 309, 318, 509, 705, 805, 806, 808, 819, 907,
609, 809,
408, 707,
none,
906,
709, 807,
none,
904,
800,
none,
900,
none,
804,
none,
619,
409, 700, 710,
718, 818,
none,
407, 508, 719,
708,
903,
310, 410, 510, 908,
210, 600, 706, 909, 917,
456, 810, 905, 910,
610,
334, 352, 360, 423, 441, 500, 520, 540, 541, 770, 860, 864, 941, 954, 970,
242, 246, 250, 268, 281, 320, 345, 561, 573, 630, 664, 757, 758, 773, 787, 847, 869, 888, 937, 972,
228, 240, 248, 253, 254, 264, 267, 284, 330, 336, 340, 425, 435, 440, 443, 473, 530, 562, 580, 626, 649, 650, 660, 732, 734, 740, 760, 765, 767, 781, 785, 830, 850,867, 868, 870, 876, 920, 931, 940, 956, 973, 978,
225, 252, 256, 323, 450, 559, 570, 651, 678, 720, 724, 727, 775, 784, 786, 828, 831, 843, 877, 925, 949,
231, 262, 270, 321, 337, 347, 361, 469, 480, 484, 623, 631, 636, 646, 661, 662, 780, 832, 856, 858, 863, 865,
229, 234, 478, 571, 641, 682, 763, 845, 859, 866, 936, 952, 971, 979, 989,
251, 276, 289, 339, 351, 386, 434, 551, 563, 586, 620, 647, 731, 754, 774, 848, 857, 862, 878, 928, 939, 980, 985,
224, 260, 269, 479, 567, 574, 585, 772, 947,
239, 325, 430, 432,
951,
769, 829,
226, 424, 438,
331, 575, 762, 779,
581, 587, 657, 778,
385, 442, 475, 533, 681, 747, 872,
343, 458, 470, 534, 544, 579, 938,
249, 531, 539, 721, 855, 929,
431, 566, 667, 669, 873, 984,
236, 272, 365, 437, 639, 737, 844,
346, 364, 577, 725, 782, 930, 959,
220, 622, 628, 629, 854,
380, 463, 548, 743, 825, 934,
332, 680, 986,

]

              if code]

import re

def nanp_phone(x):
    x = str(x)
    x = x.replace('(', '').replace(')', '').replace(' ','').replace('.', '').replace('-', '')
    if len(x) != 10:
        return None
    for c in x:
        if not c.isdigit():
            return None
    ac = int(x[0:3])
    if not ac in AREA_CODES:
        return None
    pref = x[3:6]
    if re.search("^[2-9][0-9][0-9]$", pref):
        return int(x)
    else:
        return None

TEST_PHONE = ["(310) 448-8201",
              "8182573354",
              "626.403.0600",
              "(020) 876-5432"]

    
    
    
    
